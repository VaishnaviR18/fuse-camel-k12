@NonCPS
    def parseVersion(def versionString) {
        def pattern = ~/\d+/
        def matcher = (versionString =~ pattern)
        matcher.find()
        def productVersion = matcher[0] + "." + matcher[1]
    return productVersion
    }

    @NonCPS
    def parseVersion1(def versionString) {
        def pattern = ~/\d+/
        def matcher = (versionString =~ pattern)
        matcher.find()
        def productVersion = matcher[1]
    return productVersion
    }

    @NonCPS
    def parseVersion2(def versionString) {
        def pattern = ~/\d+/
        def matcher = (versionString =~ pattern)
        matcher.find()
        def productVersion = matcher[0] + "." + matcher[1] + "." + matcher[2]
    return productVersion
    }

node("productization") {
    cleanWs()

    def scmRevision = "syndesis-1.15.0.fuse-7_12_0-00001"
    def version = "7.12.0.AR1"

    def profileId = parseVersion(version)
    def imageVersion = "1."+parseVersion1(version)
    def clusterServiceVersion = parseVersion2(version)
    def upstreamBranch = parseVersion(scmRevision)+".x"
    def GITTOKEN = "SHA256:M7XoaopSqZ0C5xNVH+SuvycgS1AngiG5MCWNmLzOvNk"
    def GITUSERNAME = "VaishnaviR18"

	checkout([
		$class: 'GitSCM', branches: [[name: '*/master']],
		userRemoteConfigs: [[url: 'https://github.com/VaishnaviR18/fuse-camel-k11.git']]
	])

    stage("build") {
        withCredentials([usernamePassword(credentialsId: 'github.com', usernameVariable: 'GITUSERNAME', passwordVariable: 'GITTOKEN')]) {
					sh "git config --local credential.helper \"!p() { echo username=\\\\$GITUSERNAME; echo password=\\\\$GITTOKEN; }; p\""
                    sh "./update-settings-xml.sh ${profileId} ${imageVersion} ${clusterServiceVersion} ${upstreamBranch}  | tee build.log"
				}
	}

    cleanWs()
}
